{
  "hash": "01b99262080ce5d428743c7c5214b112",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Data Analysis for LEL - Week 8\"\nsubtitle: \"Advanced plotting\"\nauthor: \"Stefano Coretta\"\ninstitute: University of Edinburgh\nformat:\n  mono-light-revealjs:\n    theme: [default, custom.scss]\n    history: false\nfilters: [tachyonsextra]\nexecute: \n  echo: false\n---\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n## Mosaic plot\n\n\n::: {.cell output-location='slide'}\n\n```{.r .cell-code}\nglot_status |> \n  filter(status != \"extinct\") |> \n  droplevels() |> \n  ggplot() +\n  # from the ggmosaic package\n  geom_mosaic(\n    aes(product(Macroarea), fill = status),\n    alpha = 1) +\n  scale_fill_brewer(palette = \"BuPu\") +\n  theme_dark() +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](lecture-w08_files/figure-revealjs/mosaic-1.png){width=960}\n:::\n:::\n\n\n## Line plot\n\n\n::: {.cell output-location='slide'}\n\n```{.r .cell-code}\nformants %>%\n  filter(c2 %in% c(\"t\", \"k\")) |>\n  filter(vowel %in% c(\"a\", \"o\")) |> \n  ggplot(aes(time, value, group = id, colour = formant)) +\n  geom_line(alpha = 0.8) +\n  facet_grid(cols = vars(c2), rows = vars(vowel)) +\n  scale_color_brewer(type = \"qual\") +\n  labs(\n    x = \"Relative time\", y = \"Formant value (Hz)\",\n    title = \"Formant trajectories of Italian /a, o/ followed by /k/ or /t/\"\n  )\n```\n\n::: {.cell-output-display}\n![](lecture-w08_files/figure-revealjs/line-plot-1.png){width=960}\n:::\n:::\n\n\n## Line plot with points\n\n\n::: {.cell output-location='slide'}\n\n```{.r .cell-code}\nformants %>%\n  filter(c2 %in% c(\"t\", \"k\")) |>\n  filter(vowel %in% c(\"a\", \"o\")) |> \n  ggplot(aes(time, value, group = id,\n             colour = formant)) +\n  geom_line(alpha = 0.25) +\n  geom_point(alpha = 0.5) +\n  facet_grid(cols = vars(c2), rows = vars(vowel)) +\n  scale_color_brewer(type = \"qual\") +\n  labs(\n    x = \"Relative time\", y = \"Formant value (Hz)\",\n    title = \"Formant trajectories of Italian /a, o/ followed by /k/ or /t/\"\n  )\n```\n\n::: {.cell-output-display}\n![](lecture-w08_files/figure-revealjs/line-plot-points-1.png){width=960}\n:::\n:::\n\n\n## Connected dots plot\n\n\n::: {.cell output-location='slide'}\n\n```{.r .cell-code}\ngestures |> \n  filter(gesture != \"ho_gv\", count < 30) |> \n  group_by(dyad, background, months, gesture) |> \n  summarise(\n    count_tot = sum(count),\n    .groups = \"drop\"\n  ) |> \n  ggplot(aes(gesture, count_tot, colour = background),\n         alpha = 0.2) +\n  geom_line(aes(group = dyad),\n            alpha = 0.5) +\n  geom_point() +\n  facet_grid(background ~ months) +\n  labs(\n    title = \"Infant gesture counts at 10, 11 and 12 mo\",\n    x = \"Gesture type\", y = \"Gesture count\"\n  ) +\n  theme_light() +\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](lecture-w08_files/figure-revealjs/connected-dots-1.png){width=960}\n:::\n:::\n\n\n## WALS data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ritwals)\nwals_data <- intersect_features(c(\"45A\", \"70A\")) |> \n  filter(feature_ID %in% c(\"45A\", \"70A\")) |> \n  select(feature_ID, value, language) |> \n  filter(str_detect(value, \"No\", negate = TRUE)) |> \n  pivot_wider(names_from = feature_ID, values_from = value) |> \n  count(`45A`, `70A`) |> \n  mutate(\n    `45A` = factor(`45A`, levels = c(\"Binary politeness distinction\", \"Multiple politeness distinctions\", \"Pronouns avoided for politeness\")),\n    `70A` = factor(`70A`, levels = c(\"Second singular and second plural\", \"Second singular\", \"Second plural\", \"Second person number-neutral\"))\n  ) |> \n  drop_na()\nwals_data\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 8 Ã— 3\n  `45A`                            `70A`                                 n\n  <fct>                            <fct>                             <int>\n1 Binary politeness distinction    Second person number-neutral         10\n2 Binary politeness distinction    Second plural                         1\n3 Binary politeness distinction    Second singular                       5\n4 Binary politeness distinction    Second singular and second plural    15\n5 Multiple politeness distinctions Second person number-neutral          1\n6 Multiple politeness distinctions Second singular                       2\n7 Multiple politeness distinctions Second singular and second plural     7\n8 Pronouns avoided for politeness  Second person number-neutral          2\n```\n\n\n:::\n:::\n\n\n## Alluvial plot\n\n\n::: {.cell output-location='slide'}\n\n```{.r .cell-code}\nwals_data |> \n  ggplot(aes(y = n, axis1 = `45A`, axis2 = `70A`)) +\n  geom_alluvium(aes(fill = `45A`)) +\n  geom_stratum() +\n  geom_text(stat = \"stratum\",\n            aes(label = after_stat(stratum))) +\n  scale_fill_brewer(palette = \"Dark2\") +\n  labs(title = \"Languages with a politeness distinction and a morphological imperative\") +\n  theme_light() +\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](lecture-w08_files/figure-revealjs/alluvial-1.png){width=960}\n:::\n:::\n\n\n## Violin plot\n\n\n::: {.cell output-location='slide'}\n\n```{.r .cell-code}\npolite |> \n  drop_na(f0mn) |> \n  group_by(subject) |> \n  mutate(f0mn_z = (f0mn - mean(f0mn)) / sd(f0mn)) |> \n  ggplot(aes(attitude, f0mn_z)) +\n  geom_violin() +\n  geom_jitter(aes(colour = attitude),\n              width = 0.05,\n              alpha = 0.5) +\n  stat_summary(fun = \"median\", geom = \"point\",\n               shape = 17, size = 5) +\n  facet_grid(cols = vars(musicstudent), labeller = label_both) +\n  scale_color_manual(values = c(\"orange\", \"purple\")) +\n  labs(\n    title = \"Mean f0 of Korean speakers by attitude\",\n    y = \"Mean f0 (z-scores)\",\n    caption = \"Korean speakers were students living in Germany. Mean f0 was z-scored within each speaker.\"\n  ) +\n  ThemePark::theme_starwars() +\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](lecture-w08_files/figure-revealjs/violin-1.png){width=960}\n:::\n:::\n\n\n## Don't use box-plots\n\nThe [Datasaurus](https://www.research.autodesk.com/publications/same-stats-different-graphs/) example.\n\nAlso see post by Nick Desbarats: [I've stopped using box plots, should you?](https://nightingaledvs.com/ive-stopped-using-box-plots-should-you/).\n\n![](/img/boxplot-outliers.png){fig-align=\"center\"}\n\n## Don't use error bars\n\nSee [The issue with error bars](https://www.data-to-viz.com/caveat/error_bar.html) by Data To Viz.\n\n## Don't plot means of proportion/percentage means\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(992)\nparticipants <- 10\nobservations <- round(runif(participants, 1, 15))\nprobabilities <- runif(participants)\nbinary_outcomes <- rbinom(participants, size = observations, prob = probabilities)\n\nmean(binary_outcomes / observations)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.714881\n```\n\n\n:::\n\n```{.r .cell-code}\nsum(binary_outcomes) / sum(observations)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.7866667\n```\n\n\n:::\n:::\n\n\n-   The mean of means is the same as the overall mean only if the N for each participant is the same.\n\n-   Even in this case, a mean by itself is MEANingless and plotting standard errors with error bars can be misleading (see previous slide).\n\n-   So **plot the proportion of each participant and the overall proportion!**\n\n## To summarise\n\n::: {.bg-washed-blue .b--dark-blue .ba .bw2 .br3 .shadow-5 .ph4 .mt2}\n1.  Show **raw data** (e.g. individual observations, participants, items...).\n\n2.  Do not use box-plots, even if you are asked to!\n\n    1.  Use density plots, violin plots, strip charts.\n\n3.  Do not use \"error bars\", even if you are asked to!\n\n    1.  If the person asking insists, ask \"which measure should I use for the error bars?\".\n\n    2.  The only sensible answer is \"X% Confidence Intervals\" (where X is usually 95%).\n\n4.  Do not use means of proportions!\n\n    1.  Calculate the overall proportion and/or show the proportion of each participant as raw data.\n:::\n",
    "supporting": [
      "lecture-w08_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}