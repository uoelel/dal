---
title: "DAL tutorial - Week 9"
subtitle: "Troubleshooting"
editor: visual
format: 
  html:
    css: [webex.css]
    include-after-body: [webex.js]
execute: 
  eval: false
---

## Troubleshooting

Go to <https://bookdown.org/yih_huynh/Guide-to-R-Book/trouble.html> and read about common errors and how to fix them.

::: callout-warning
## Terminology

The linked page talks about "loading libraries" and "loading packages", but you know very well by now that we **attach packages** and we don't "load libraries".

For a technical explanation about loading vs attaching and packages vs libraries see: <https://r-pkgs.org/dependencies-mindset-background.html#sec-dependencies-namespace> and following sections.
:::

## Fix me!

The following code chunks have code that throws errors or generate mistakes (without throwing errors). Try to run them in R, study the error and fix the code!


**Example 1:**

```{r}
a <- "2"
a + 1
```


**Example 2:**

Note: The goal of the following code chunk is to produce a tibble/data frame.

```{r}
iris |>
  group_by(species) |>
  summary(
    mean = mean(Petal.Lengths)
  )
```


**Example 3:**

```{r}
lirbary(tidyvrese)

starwars
  mutate(
    sex = fatcor(sex, level = c("female", "hermaphrodite", "male", "none"))
  ) |> 
  count(Sex)
```

Do all of the levels of the variable `sex` show up in your tibble/data frame of counts?


**Example 4:**

```{r}
iris |> 
  ggplot(x = Species, y = Petal.Length) |> 
  geom_jiter()
```


**Example 5:**

```{r}
bat <- tibble(
  id = c(A, B, C),
  response = rbinom(10, 1, 0.5)
)

cat(bat.response)
```


**Example 6:**

```{r}
starwars %>% 
  filter(sex != is.na(sex)) %>% 
  ggplot(aes(x = mass, y = height, colour = sex, shape = sex) +
  geom_point() +
  scale_x_log10()
  labs(
    x = 'Mass'
    y = 'Height'
    colour = 'Sex'
    shape = 'Sex
  )
```


**Example 7:**

```{r}
tucker2019 <- read_csv('data/tucker2019/mald_1_1.rds')

tucker2019 %>% 
  ggplot(aes(x = isword, y = RT, colour = ACC, fill = ACC)) +
  geom_jitter(
    alpha = 0.3,
    position_jitterdodge(),
  ) +
  scale_colour_manual(values = c('#dc050c', '#196b50', ))
```
